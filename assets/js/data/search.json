[ { "title": "Tokenizing Angular Environment Configuration in Azure DevOps", "url": "/posts/angular-tokenization/", "categories": "Azure DevOps, Pipelines", "tags": "Azure DevOps", "date": "2021-06-17 18:30:00 -0500", "snippet": "OverviewI was working with a team that had an Angular front-end application and I was tasked with improving their CI/CD process. They had some automated pipelines, but they were running a build before each environment by running a different npm run build -- --configuration &amp;lt;env&amp;gt; com..." }, { "title": "So You Want to Migrate Trac Tickets to GitHub Issues", "url": "/posts/trac-to-github/", "categories": "GitHub", "tags": "GitHub", "date": "2021-01-25 08:30:00 -0600", "snippet": "DisclaimerI should first off state that I wouldn’t entirely recommend this, if you are migrating to GitHub for the first time, you should try to start off with a blank slate. Keep the old tickets in Trac or the database around for a period in time in case you need to reference, but don’t migrate ..." }, { "title": "Azure DevOps: Bulk Reparent Work Items", "url": "/posts/reparent-work-items/", "categories": "Azure DevOps", "tags": "Azure DevOps, Work Items", "date": "2021-01-17 16:30:00 -0600", "snippet": "Reparent Work Items in the UIIf you are reparenting only a few work items, then the easiest way is to use the Mapping view in the Azure DevOps backlog, as described by Microsoft:Reparent Work Items with a ScriptHowever, mapping (or reparenting) work items in the Azure DevOps UI can be a little cl..." }, { "title": "Authorize and Restore Azure Artifacts NuGet Packages in GitHub Actions", "url": "/posts/authorize-azure-artifacts-in-github-actions/", "categories": "GitHub, DevOps", "tags": "Azure DevOps, NuGet, GitHub, Azure Artifacts", "date": "2021-01-04 14:15:00 -0600", "snippet": "SummaryI needed to be able to restore my NuGet packages hosted in an Azure Artifacts instance in a GitHub Action workflow. In Azure Pipelines, it’s relatively simple with the Restore NuGet Packages task. However, there is not really an equivalent native Action to be able to add to the workflow to..." }, { "title": "Quickly Migrate NuGet Packages to a New Feed En Masse", "url": "/posts/nuget-pusher-script/", "categories": "Azure DevOps", "tags": "Azure DevOps, NuGet", "date": "2020-12-23 16:45:00 -0600", "snippet": "SummaryThis is a very simple bash script that can assist you in migrating NuGet packages to a different Artifact feed. It’s written with Azure DevOps in mind as a target, but there’s no reason why you couldn’t use any other artifact feed as a destination.I used the script after I ran a NuGet rest..." }, { "title": "GitHub: Block Pull Request if Code Scanning Alerts Are Found", "url": "/posts/github-codeql-pr/", "categories": "GitHub, Pipelines", "tags": "GitHub, Pull Requests, CodeQL", "date": "2020-12-16 20:00:00 -0600", "snippet": "OverviewAfter virtually attending GitHub Universe last week and watching the GitHub Advanced Security round-up and Catching vulnerabilities early with GitHub sessions, it got me thinking: How do I block a pull request from being merged if the scans detect issues? I didn’t think the GitHub Docs we..." }, { "title": "Azure DevOps: Extends Template with Build and Deployment Templates", "url": "/posts/extends-template/", "categories": "Azure DevOps, Pipelines", "tags": "Azure DevOps, Pipeline Templates", "date": "2020-12-10 22:00:00 -0600", "snippet": "ScenarioI had a client that wanted to integrate a secret scanning utility (among other checks) into the pipeline, and enforce this control. Colin Dembovsky (my co-worker) and I typically recommend creating and referencing job templates for each environment. Job templates are very flexible, allowi..." } ]
